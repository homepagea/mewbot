Moment = require 'moment'
Extends = require 'extend'

ignored_functions=["constructor","start","stop","afterConfigUpdate"]

class MewService
    constructor : (@mew,@config)->

    start : (callback)->
        callback()

    ping : (callback)->
        response = {
            status : "NORMAL",
            name : @mew.name,
            time : (new Moment()).format()
        }
        callback(null,response)

    stop : (callback)->
        if callback
            callback()

    afterConfigUpdate : (callback)->
        @mew.logger.debug "configure for service [#{@serviceName}] update complete"
        callback()

    configure : (key,value,callback)->
        if typeof key is 'function'
            callback = key
            return callback(null,@config)
        else
            if key
                configOrigin = Extends({},@config)
                if typeof value is 'function'
                    callback = value
                    return callback(null,@config[key])
                else if value
                    @config[key]=value
                else
                    delete @config[key]
                try
                    @afterConfigUpdate (err)=>
                        if err
                            @config = configOrigin
                            callback(err)
                        else
                            @mew.brain.serviceManager.persistConfig @serviceName,(err)=>
                                if err
                                    @config = configOrigin
                                    callback(err)
                                else
                                    callback(null,@config)
                catch ex
                    @config = configOrigin
                    callback(ex)
            else
                callback("illegal argument")


module.exports=MewService
module.exports.ignored_functions=ignored_functions
