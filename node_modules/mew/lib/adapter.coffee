{EventEmitter} = require 'events'
uuid = require 'uuid'

class Adapter extends EventEmitter
    constructor : (@mew,@name,@profileName)->
        @uuid = uuid.v1().toString()
        @mew.brain.userManager.data[@uuid]={
            users : {}
        }
    run : ->

    userForId:(id,options)->
        return @mew.brain.userManager.userForId @uuid,id,options

    userForName : (name)->
        return @mew.brain.userManager.userForName @uuid,name

    receive : (message)->
        envelop ={
            adapterId: @uuid,
            adapter : @name,
            message : message
        }
        @mew.brain.receive envelop
    
    sendText : (userEnvelop,messages ... )->

    broadcastText : (messages ...) ->
        
        

class MultiAdapter extends Adapter
    constructor : (@mew,@name)->
        super @mew,@name

module.exports = Adapter
module.exports.MultiAdapter = MultiAdapter